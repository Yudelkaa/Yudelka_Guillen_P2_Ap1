@page "/Edit/{VehiculoId:int}"
@inject NavigationManager NavigationManager
@using Shared.Models
@inject HttpClient httpClient

<PageTitle>Editar Vehiculo</PageTitle>
<EditForm Model="vehiculo" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3 class="fw-bold">Editar Vehiculo</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-6">
                        <label class="fw-bold">Fecha</label>
                        <InputDate @bind-Value="vehiculo.Fecha" class="form-control" />
                        <ValidationMessage For="@(()=> vehiculo.Fecha)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <label class="fw-bold">Descripci&oacute;n</label>
                        <InputText @bind-Value="vehiculo.Descripcion" class="form-control" />
                        <ValidationMessage For="@(()=> vehiculo.Descripcion)" />
                    </div>
                    <div class="col-6">
                        <label class="fw-bold">Monto</label>
                        <InputNumber @bind-Value="vehiculo.Costo" class="form-control" />
                        <ValidationMessage For="@(()=> vehiculo.Costo)" />
                    </div>
                </div>
            </div>
            <div class="card-footer d-flex justify-content-center">
                <div class="px-2">
                    <button type="button" class="btn btn-primary" @onclick="Detalle">Volver</button>
                </div>
                <button type="submit" class="btn btn-success"><i class="bi bi-floppy-fill" /> Modificar</button>
            </div>
        </div>
        @mensaje
    </div>
</EditForm>

@code {
    [Parameter]
    public int VehiculoId { get; set; }

    public Vehiculo vehiculo { get; set; } = new Vehiculo();
    public string mensaje = "";

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);

        if (VehiculoId > 0)
        {
            vehiculo = await httpClient.GetFromJsonAsync<Vehiculo>($"api/Vehiculoes/{VehiculoId}");
        }
    }

    public async Task Modificar()
    {
        var response = await httpClient.PutAsJsonAsync($"api/Vehiculoes/{vehiculo.VehiculoId}", vehiculo);
        if (response.IsSuccessStatusCode)
        {
            mensaje = "Modificación hecha correctamente";
            await Task.Delay(2000);
            Detalle();
        }
        else
        {
            mensaje = "Error al guardar los cambios. Por favor, inténtalo de nuevo más tarde.";
        }
    }

    void Detalle()
    {
        NavigationManager.NavigateTo("/Details");
    }
}
